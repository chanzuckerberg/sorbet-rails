# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/database_cleaner/all/database_cleaner.rbi
#
# database_cleaner-1.7.0
module DatabaseCleaner
  def self.[](orm, opts = nil); end
  def self.add_cleaner(orm, opts = nil); end
  def self.allow_production; end
  def self.allow_production=(arg0); end
  def self.allow_remote_database_url; end
  def self.allow_remote_database_url=(arg0); end
  def self.app_root; end
  def self.app_root=(desired_root); end
  def self.can_detect_orm?; end
  def self.clean!; end
  def self.clean; end
  def self.clean_with!(*args); end
  def self.clean_with(*args); end
  def self.cleaning(&inner_block); end
  def self.connections; end
  def self.init_cleaners; end
  def self.logger; end
  def self.logger=(log_source); end
  def self.orm=(orm); end
  def self.orm_module(symbol); end
  def self.remove_duplicates; end
  def self.start; end
  def self.strategy=(stratagem); end
end
class DatabaseCleaner::NullStrategy
  def self.clean; end
  def self.cleaning(&block); end
  def self.db=(connection); end
  def self.start; end
end
class DatabaseCleaner::Safeguard
  def run; end
end
class DatabaseCleaner::Safeguard::Error < Exception
end
class DatabaseCleaner::Safeguard::Error::RemoteDatabaseUrl < DatabaseCleaner::Safeguard::Error
  def initialize; end
end
class DatabaseCleaner::Safeguard::Error::ProductionEnv < DatabaseCleaner::Safeguard::Error
  def initialize(env); end
end
class DatabaseCleaner::Safeguard::RemoteDatabaseUrl
  def given?; end
  def remote?(url); end
  def run; end
  def skip?; end
end
class DatabaseCleaner::Safeguard::Production
  def given?; end
  def key; end
  def run; end
  def skip?; end
end
class DatabaseCleaner::Base
  def <=>(other); end
  def auto_detected?; end
  def autodetect; end
  def autodetect_orm; end
  def clean!; end
  def clean; end
  def clean_with!(*args); end
  def clean_with(*args); end
  def cleaning(&block); end
  def create_strategy(*args); end
  def db; end
  def db=(desired_db); end
  def initialize(desired_orm = nil, opts = nil); end
  def orm; end
  def orm=(desired_orm); end
  def orm_module; end
  def orm_strategy(strategy); end
  def set_default_orm_strategy; end
  def set_strategy_db(strategy, desired_db); end
  def start; end
  def strategy; end
  def strategy=(args); end
  def strategy_db=(desired_db); end
  include Comparable
end
class DatabaseCleaner::NoORMDetected < StandardError
end
class DatabaseCleaner::UnknownStrategySpecified < ArgumentError
end
